package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeMainSubordinateServerGroups invokes the slb.DescribeMainSubordinateServerGroups API synchronously
// api document: https://help.aliyun.com/api/slb/describemasterslaveservergroups.html
func (client *Client) DescribeMainSubordinateServerGroups(request *DescribeMainSubordinateServerGroupsRequest) (response *DescribeMainSubordinateServerGroupsResponse, err error) {
	response = CreateDescribeMainSubordinateServerGroupsResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeMainSubordinateServerGroupsWithChan invokes the slb.DescribeMainSubordinateServerGroups API asynchronously
// api document: https://help.aliyun.com/api/slb/describemasterslaveservergroups.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeMainSubordinateServerGroupsWithChan(request *DescribeMainSubordinateServerGroupsRequest) (<-chan *DescribeMainSubordinateServerGroupsResponse, <-chan error) {
	responseChan := make(chan *DescribeMainSubordinateServerGroupsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeMainSubordinateServerGroups(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeMainSubordinateServerGroupsWithCallback invokes the slb.DescribeMainSubordinateServerGroups API asynchronously
// api document: https://help.aliyun.com/api/slb/describemasterslaveservergroups.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeMainSubordinateServerGroupsWithCallback(request *DescribeMainSubordinateServerGroupsRequest, callback func(response *DescribeMainSubordinateServerGroupsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeMainSubordinateServerGroupsResponse
		var err error
		defer close(result)
		response, err = client.DescribeMainSubordinateServerGroups(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeMainSubordinateServerGroupsRequest is the request struct for api DescribeMainSubordinateServerGroups
type DescribeMainSubordinateServerGroupsRequest struct {
	*requests.RpcRequest
	AccessKeyId          string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	IncludeListener      requests.Boolean `position:"Query" name:"IncludeListener"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	Tags                 string           `position:"Query" name:"Tags"`
	LoadBalancerId       string           `position:"Query" name:"LoadBalancerId"`
}

// DescribeMainSubordinateServerGroupsResponse is the response struct for api DescribeMainSubordinateServerGroups
type DescribeMainSubordinateServerGroupsResponse struct {
	*responses.BaseResponse
	RequestId               string                  `json:"RequestId" xml:"RequestId"`
	MainSubordinateServerGroups MainSubordinateServerGroups `json:"MainSubordinateServerGroups" xml:"MainSubordinateServerGroups"`
}

// CreateDescribeMainSubordinateServerGroupsRequest creates a request to invoke DescribeMainSubordinateServerGroups API
func CreateDescribeMainSubordinateServerGroupsRequest() (request *DescribeMainSubordinateServerGroupsRequest) {
	request = &DescribeMainSubordinateServerGroupsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "DescribeMainSubordinateServerGroups", "slb", "openAPI")
	return
}

// CreateDescribeMainSubordinateServerGroupsResponse creates a response to parse from DescribeMainSubordinateServerGroups response
func CreateDescribeMainSubordinateServerGroupsResponse() (response *DescribeMainSubordinateServerGroupsResponse) {
	response = &DescribeMainSubordinateServerGroupsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
