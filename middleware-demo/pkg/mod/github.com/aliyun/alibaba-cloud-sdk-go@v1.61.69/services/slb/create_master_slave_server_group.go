package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateMainSubordinateServerGroup invokes the slb.CreateMainSubordinateServerGroup API synchronously
// api document: https://help.aliyun.com/api/slb/createmasterslaveservergroup.html
func (client *Client) CreateMainSubordinateServerGroup(request *CreateMainSubordinateServerGroupRequest) (response *CreateMainSubordinateServerGroupResponse, err error) {
	response = CreateCreateMainSubordinateServerGroupResponse()
	err = client.DoAction(request, response)
	return
}

// CreateMainSubordinateServerGroupWithChan invokes the slb.CreateMainSubordinateServerGroup API asynchronously
// api document: https://help.aliyun.com/api/slb/createmasterslaveservergroup.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateMainSubordinateServerGroupWithChan(request *CreateMainSubordinateServerGroupRequest) (<-chan *CreateMainSubordinateServerGroupResponse, <-chan error) {
	responseChan := make(chan *CreateMainSubordinateServerGroupResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateMainSubordinateServerGroup(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateMainSubordinateServerGroupWithCallback invokes the slb.CreateMainSubordinateServerGroup API asynchronously
// api document: https://help.aliyun.com/api/slb/createmasterslaveservergroup.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateMainSubordinateServerGroupWithCallback(request *CreateMainSubordinateServerGroupRequest, callback func(response *CreateMainSubordinateServerGroupResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateMainSubordinateServerGroupResponse
		var err error
		defer close(result)
		response, err = client.CreateMainSubordinateServerGroup(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateMainSubordinateServerGroupRequest is the request struct for api CreateMainSubordinateServerGroup
type CreateMainSubordinateServerGroupRequest struct {
	*requests.RpcRequest
	AccessKeyId                string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId            requests.Integer `position:"Query" name:"ResourceOwnerId"`
	MainSubordinateBackendServers  string           `position:"Query" name:"MainSubordinateBackendServers"`
	ResourceOwnerAccount       string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount               string           `position:"Query" name:"OwnerAccount"`
	MainSubordinateServerGroupName string           `position:"Query" name:"MainSubordinateServerGroupName"`
	OwnerId                    requests.Integer `position:"Query" name:"OwnerId"`
	Tags                       string           `position:"Query" name:"Tags"`
	LoadBalancerId             string           `position:"Query" name:"LoadBalancerId"`
}

// CreateMainSubordinateServerGroupResponse is the response struct for api CreateMainSubordinateServerGroup
type CreateMainSubordinateServerGroupResponse struct {
	*responses.BaseResponse
	RequestId                 string                                                  `json:"RequestId" xml:"RequestId"`
	MainSubordinateServerGroupId  string                                                  `json:"MainSubordinateServerGroupId" xml:"MainSubordinateServerGroupId"`
	MainSubordinateBackendServers MainSubordinateBackendServersInCreateMainSubordinateServerGroup `json:"MainSubordinateBackendServers" xml:"MainSubordinateBackendServers"`
}

// CreateCreateMainSubordinateServerGroupRequest creates a request to invoke CreateMainSubordinateServerGroup API
func CreateCreateMainSubordinateServerGroupRequest() (request *CreateMainSubordinateServerGroupRequest) {
	request = &CreateMainSubordinateServerGroupRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "CreateMainSubordinateServerGroup", "slb", "openAPI")
	return
}

// CreateCreateMainSubordinateServerGroupResponse creates a response to parse from CreateMainSubordinateServerGroup response
func CreateCreateMainSubordinateServerGroupResponse() (response *CreateMainSubordinateServerGroupResponse) {
	response = &CreateMainSubordinateServerGroupResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
